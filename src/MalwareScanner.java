import java.io.IOException;
import java.util.Map;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.io.FileWriter;
/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        // TODO: YOUR CODE HERE
        try {
            File file = new File(filename);
            FileWriter myWriter = new FileWriter("scanLog.txt");
            Scanner myReader = new Scanner(file);
            int counter =0;
            int counter_threats =0;
            System.out.println("Started scanning...");
            System.out.println("--------------------------------------------------------------------------------");
            while (myReader.hasNextLine()) {
                String data = myReader.nextLine();
                String key = turbo64(data);
                counter++;
                if (malwareDB.containsKey(key)){
                   myWriter.write(key +"@" + counter +"\n" );
                    System.out.println("Detected malware!");
                    System.out.println(malwareDB.get(key));
                    System.out.println("--------------------------------------------------------------------------------");
                    counter_threats++;
                }
            }
            System.out.println("Scan complete! " + counter_threats + " threats are found and eliminated. Generating log file...");
            myReader.close();
            myWriter.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }

    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE
        long MOD_TURBO = 4294967291L ;
        long a = 0;
        long b = 1;
        for (int c = 0; c < in.length();c++ ) {
           // System.out.println(c);
            a = (a + (int) in.charAt(c)) % MOD_TURBO;
            b =(a + b) % MOD_TURBO;
        }
        return Long.toHexString((b << 32) | a);

    }
}
